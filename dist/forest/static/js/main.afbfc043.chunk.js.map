{"version":3,"sources":["components/WelcomePage.tsx","components/AnswerPage.tsx","components/PublishPage.tsx","components/CommentPage.tsx","assets/background.jpg","App.tsx","assets/little-tree.svg","reportWebVitals.ts","index.tsx"],"names":["StyledTableCell","withStyles","theme","createStyles","head","backgroundColor","color","palette","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","table","minWidth","WelcomePage","props","classes","data","users","i","length","hasOwnProperty","author","count","comment","rows","Object","keys","map","name","sort","a","b","Button","onClick","onAnswer","variant","Divider","TableContainer","component","Paper","Table","className","aria-label","TableHead","align","TableBody","user","scope","questions","question","answers","A","B","right","description","AnswerPage","useState","value","setValue","q","setQ","randomInt","min","max","Math","ceil","floor","random","onFresh","useEffect","FormControl","RadioGroup","onChange","e","target","key","FormControlLabel","label","control","Radio","disabled","style","onSuccess","onCancel","marginLeft","types","PublishPage","type","x","y","isNameError","setIsNameError","setName","isCommentError","setIsCommentError","setComment","setType","noValidate","autoComplete","TextField","id","error","width","multiline","select","item","helperText","option","MenuItem","CommentPage","itemMap","defaultItem","App","clientWidth","document","documentElement","clientHeight","setData","currentItemIndex","setCurrentItemIndex","nativeItem","setNativeItem","page","setPage","nativeEvent","offsetX","offsetY","index","src","alt","stopPropagation","marginTop","position","border","Background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.afbfc043.chunk.js","sourcesContent":["// import { useState } from 'react'\r\n\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\n\r\n// import interface\r\nimport { Item } from '../typings/template'\r\n\r\nconst StyledTableCell = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        head: {\r\n            backgroundColor: '#48cc90',\r\n            color: theme.palette.common.white,\r\n        },\r\n        body: {\r\n            fontSize: 14,\r\n        },\r\n    }),\r\n)(TableCell)\r\n\r\nconst StyledTableRow = withStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            '&:nth-of-type(odd)': {\r\n                backgroundColor: theme.palette.action.hover,\r\n            },\r\n        },\r\n    }),\r\n)(TableRow)\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n        minWidth: 0,\r\n    },\r\n})\r\n\r\ninterface Users {\r\n    [name: string]: {\r\n        count: number\r\n        comment: string\r\n    }\r\n}\r\n\r\ninterface User {\r\n    name: string\r\n    count: number\r\n    comment: string\r\n}\r\n\r\ninterface Props {\r\n    data: Item[]\r\n    onAnswer: () => void\r\n    // onCancel: () => void\r\n}\r\n\r\nfunction WelcomePage(props: Props) {\r\n\r\n    const classes = useStyles()\r\n\r\n    const data = props.data\r\n    const users = {} as Users\r\n    for(let i = 0; i < data.length; i++) {\r\n        if(users.hasOwnProperty(data[i].author)) {\r\n            users[data[i].author].count += 1\r\n            users[data[i].author].comment = data[i].comment\r\n        } else {\r\n            users[data[i].author] = {count: 1, comment: data[i].comment}\r\n        }\r\n    }\r\n    const rows = Object.keys(users).map((name) => {\r\n        return {\r\n            name: name,\r\n            count: users[name].count,\r\n            comment: users[name].comment,\r\n        } as User\r\n    })\r\n    rows.sort((a, b) => b.count - a.count)\r\n\r\n    return (\r\n        <div>\r\n            <h2>规则说明：</h2>\r\n            <p>我们生活在同一个世界，同一个地球，地球是我们永远的家。</p>\r\n            <p>我们每个人都应该为维持地球上的碳平衡，实现碳中和出一份力。</p>\r\n            <p>你知道哪些实现碳中和的方法呢？你能答对这些与碳中和相关的问题吗？快来试着挑战一下吧！</p>\r\n            <p>点击 <b>答题</b> 按钮，便可以开始答题。</p>\r\n            <p>每答对一道题，都可以在上方的地球上植下一棵属于你自己的小树，并进行留言，与所有人分享你的感悟。</p>\r\n            <p>点击小树，可以查看他人的留言。</p>\r\n            <Button onClick={props.onAnswer} variant=\"outlined\" color=\"primary\">答题</Button>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Divider />\r\n            <br />\r\n            <br />\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"customized table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <StyledTableCell>名称</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">答题数</StyledTableCell>\r\n                            <StyledTableCell align=\"right\">留言</StyledTableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {rows.map((user) => (\r\n                            <StyledTableRow key={user.name}>\r\n                                <StyledTableCell component=\"th\" scope=\"row\">\r\n                                    {user.name}\r\n                                </StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{user.count}</StyledTableCell>\r\n                                <StyledTableCell align=\"right\">{user.comment}</StyledTableCell>\r\n                            </StyledTableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WelcomePage\r\n","import Button from '@material-ui/core/Button'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport Radio from '@material-ui/core/Radio'\r\n\r\nimport { useState, useEffect } from 'react'\r\n\r\ninterface Question {\r\n    question: string\r\n    answers: {\r\n        [key: string]: string\r\n    }\r\n    right: string\r\n    description: JSX.Element | string | null\r\n}\r\n\r\nconst questions = [\r\n    {\r\n        question: 'Are you OK?',\r\n        answers: {\r\n            A: 'Yes',\r\n            B: 'No',\r\n        },\r\n        right: 'A',\r\n        description: <p>相关解释.</p>\r\n    },\r\n    {\r\n        question: '你好吗?',\r\n        answers: {\r\n            A: '好',\r\n            B: '不好',\r\n        },\r\n        right: 'A',\r\n        description: <p>相关解释.</p>\r\n    }\r\n]\r\n\r\ninterface Props {\r\n    onSuccess: () => void\r\n    onCancel: () => void\r\n}\r\n\r\nfunction AnswerPage(props: Props) {\r\n\r\n    const [value, setValue] = useState('')\r\n\r\n    function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        setValue((e.target as HTMLInputElement).value)\r\n    }\r\n\r\n    const [q, setQ] = useState({\r\n        question: '问题加载中...',\r\n        answers: {\r\n            A: '答案加载中...',\r\n        },\r\n        right: 'B',\r\n        description: <p>无.</p>\r\n    } as Question)\r\n\r\n    //不含最大值, 含最小值\r\n    function randomInt(min: number, max: number) {\r\n        min = Math.ceil(min)\r\n        max = Math.floor(max)\r\n        return Math.floor(Math.random() * (max - min)) + min\r\n    }\r\n\r\n    useEffect(() => {\r\n        setQ(questions[randomInt(0, questions.length)])\r\n    }, [])\r\n\r\n    function onFresh() {\r\n        setQ(questions[randomInt(0, questions.length)])\r\n        setValue('')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>{q.question}</h2>\r\n            <FormControl>\r\n                <RadioGroup value={value} onChange={handleChange}>\r\n                    {Object.keys(q.answers).map((key) =>\r\n                        <FormControlLabel value={key}\r\n                            key={key}\r\n                            label={<span><b>{key}.</b> {q.answers[key]}</span>}\r\n                            control={<Radio color={key === q.right ? 'primary' : 'secondary'} />}\r\n                            disabled={value !== '' && value !== key}\r\n                        />\r\n                    )}\r\n                </RadioGroup>\r\n            </FormControl>\r\n\r\n            {(() => {\r\n                if (value === '') {\r\n                    return <br />\r\n                } else if (value === q.right) {\r\n                    return <div>\r\n                        <p style={{ color: '#48cc90' }}>恭喜你答对了!</p>\r\n                        <div>{q.description}</div>\r\n                    </div>\r\n                } else {\r\n                    return <div>\r\n                        <p style={{ color: '#f50057' }}>正确答案是: {q.right + '. ' + q.answers[q.right]}.</p>\r\n                        <div>{q.description}</div>\r\n                    </div>\r\n                }\r\n            })()}\r\n\r\n            <br />\r\n\r\n            {(() => {\r\n                if (value === '') {\r\n                    return null\r\n                } else if (value === q.right) {\r\n                    return <Button onClick={props.onSuccess} variant=\"outlined\" color=\"primary\">植树</Button>\r\n                } else {\r\n                    return <Button onClick={onFresh} variant=\"outlined\" color=\"primary\">重答</Button>\r\n                }\r\n            })()}\r\n            <Button onClick={props.onCancel} variant=\"outlined\" color=\"primary\" style={value === '' ? {} : { marginLeft: 20 }}>返回</Button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AnswerPage","import Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\n\r\nimport { useState, useEffect } from 'react'\r\n\r\n// import interface\r\nimport { Item } from '../typings/template'\r\n\r\nconst types = [\r\n    {\r\n        value: 'tree',\r\n        label: '树 1',\r\n    },\r\n    {\r\n        value: 'tree 2',\r\n        label: '树 2',\r\n    },\r\n]\r\n\r\ninterface Props {\r\n    item: Item\r\n    onChange: (item: Item) => void\r\n    onSuccess: (name: string, comment: string) => void\r\n    onCancel: () => void\r\n}\r\n\r\nfunction PublishPage(props: Props) {\r\n\r\n    useEffect(() => {\r\n        props.onChange({\r\n            type: 'tree',\r\n            x: 250,\r\n            y: 850,\r\n            author: 'OrangeX4',\r\n            comment: 'Hello World!'\r\n        })\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    // Name\r\n    const [isNameError, setIsNameError] = useState(false)\r\n    const [name, setName] = useState('')\r\n    function handleNameChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        setIsNameError(false)\r\n        setName(e.target.value)\r\n    }\r\n\r\n    // Comment\r\n    const [isCommentError, setIsCommentError] = useState(false)\r\n    const [comment, setComment] = useState('')\r\n    function handleCommentChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        setIsCommentError(false)\r\n        setComment(e.target.value)\r\n    }\r\n\r\n    // Type\r\n    const [type, setType] = useState('tree')\r\n    function handleTypeChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        setType(e.target.value)\r\n        props.onChange({ ...props.item, type: e.target.value as any })\r\n    }\r\n\r\n    function handleConfirm() {\r\n        if (name !== '' && comment !== '') {\r\n            props.onSuccess(name, comment)\r\n            return\r\n        }\r\n        if (name === '') {\r\n            setIsNameError(true)\r\n        }\r\n        if (comment === '') {\r\n            setIsCommentError(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form noValidate autoComplete=\"off\">\r\n                <TextField id=\"standard-basic\"\r\n                    label=\"昵称\"\r\n                    error={isNameError}\r\n                    value={name}\r\n                    onChange={handleNameChange}\r\n                    style={{ width: '100%' }} />\r\n                <br />\r\n                <br />\r\n                <TextField id=\"standard-multiline-flexible\"\r\n                    label=\"留言\"\r\n                    multiline\r\n                    error={isCommentError}\r\n                    value={comment}\r\n                    onChange={handleCommentChange}\r\n                    style={{ width: '100%' }}\r\n                />\r\n                <br />\r\n                <br />\r\n                <TextField\r\n                    id=\"standard-select-currency\"\r\n                    select\r\n                    label=\"类型\"\r\n                    value={type}\r\n                    onChange={handleTypeChange}\r\n                    helperText=\"选择你想要种植的植物类型\"\r\n                >\r\n                    {types.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n            </form>\r\n\r\n            <h2>说明:</h2>\r\n            <p>填写你的昵称和留言.</p>\r\n            <p>并在上方的地球中, 通过鼠标点击确定你要种植的位置</p>\r\n            <p>最后点确认, 便可种下一颗专属于你的小植物!</p>\r\n            <br />\r\n            <Button onClick={handleConfirm} variant=\"outlined\" color=\"primary\">确认</Button>\r\n            <Button onClick={props.onCancel} variant=\"outlined\" color=\"primary\" style={{ marginLeft: 20 }}>取消</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PublishPage\r\n","\r\nimport Button from '@material-ui/core/Button'\r\n\r\n// import interface\r\nimport { Item } from '../typings/template'\r\n\r\ninterface Props {\r\n    item: Item\r\n    onCancel: () => void\r\n}\r\n\r\nfunction CommentPage(props: Props) {\r\n\r\n    return (\r\n        <div>\r\n            <h2>{props.item.author}</h2>\r\n            {props.item.comment}\r\n            <br />\r\n            <br />\r\n            <Button onClick={props.onCancel} variant=\"outlined\" color=\"primary\">返回</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentPage\r\n","export default __webpack_public_path__ + \"static/media/background.b0aa3a0e.jpg\";","import { useState } from 'react'\r\nimport './css/App.css'\r\n\r\nimport WelcomePage from './components/WelcomePage'\r\nimport AnswerPage from './components/AnswerPage'\r\nimport PublishPage from './components/PublishPage'\r\nimport CommentPage from './components/CommentPage'\r\n\r\nimport Background from './assets/background.jpg'\r\nimport Tree from './assets/little-tree.svg'\r\n\r\n// import interface\r\nimport { Item } from './typings/template'\r\n\r\nconst itemMap = { 'tree': Tree }\r\n\r\nconst defaultItem = {\r\n    type: 'tree',\r\n    x: 250,\r\n    y: 850,\r\n    author: 'OrangeX4',\r\n    comment: 'Hello World!'\r\n} as Item\r\n\r\nfunction App() {\r\n    const clientWidth = document.documentElement.clientWidth\r\n    const clientHeight = document.documentElement.clientHeight\r\n\r\n    // Cloud data\r\n    const [data, setData] = useState([\r\n        {\r\n            type: 'tree',\r\n            x: 200,\r\n            y: 800,\r\n            author: 'XiaoMing',\r\n            comment: 'Hello World!'\r\n        },\r\n        {\r\n            type: 'tree',\r\n            x: 250,\r\n            y: 800,\r\n            author: 'OrangeX4',\r\n            comment: 'Hello Forest!'\r\n        }\r\n    ] as Item[])\r\n    const [currentItemIndex, setCurrentItemIndex] = useState(-1)\r\n\r\n    // Native data\r\n    const [nativeItem, setNativeItem] = useState(null as Item | null)\r\n\r\n\r\n    // State Machine\r\n    const [page, setPage] = useState('WELCOME')\r\n\r\n    function handleGameClick(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\r\n        if (nativeItem) {\r\n            setNativeItem({ ...nativeItem, x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div onClick={handleGameClick} className={clientHeight > clientWidth ? \"game-top\" : \"game-left\"}>\r\n                {\r\n                    data.map((item, index) =>\r\n                        <img src={itemMap[item.type]}\r\n                            key={index}\r\n                            alt={item.author + '\\'s ' + item.type}\r\n                            onClick={(e) => {\r\n                                setCurrentItemIndex(index)\r\n                                setPage('COMMENT')\r\n                                e.stopPropagation()\r\n                            }}\r\n                            style={{\r\n                                marginTop: item.y,\r\n                                marginLeft: item.x,\r\n                                position: 'absolute'\r\n                            }} />\r\n                    )\r\n                }\r\n                {\r\n                    nativeItem ?\r\n                        <img src={itemMap[nativeItem.type]}\r\n                            alt={nativeItem.author + '\\'s ' + nativeItem.type}\r\n                            onClick={(e) => { e.stopPropagation() }}\r\n                            style={{\r\n                                marginTop: nativeItem.y,\r\n                                marginLeft: nativeItem.x,\r\n                                position: 'absolute',\r\n                                border: '2px solid #FC0'\r\n                            }} />\r\n                        : null\r\n                }\r\n                <img src={Background} alt='background' />\r\n            </div>\r\n\r\n            <div className={clientHeight > clientWidth ? \"show-root-bottom\" : \"show-root-right\"}>\r\n                <div className=\"show-content\">\r\n                    {(() => {\r\n                        switch (page) {\r\n                            case 'WELCOME':\r\n                                return (\r\n                                    <WelcomePage data={data}\r\n                                        onAnswer={() => { setPage('ANSWER') }} />\r\n                                )\r\n                            case 'ANSWER':\r\n                                return (\r\n                                    <AnswerPage onSuccess={() => {\r\n                                        setPage('PUBLISH')\r\n                                    }}\r\n                                        onCancel={() => {\r\n                                            setPage('WELCOME')\r\n                                        }} />\r\n                                )\r\n                            case 'PUBLISH':\r\n                                return (\r\n                                    <PublishPage item={nativeItem ? nativeItem : defaultItem}\r\n                                        onChange={(item) => {\r\n                                            setNativeItem(item)\r\n                                        }}\r\n                                        onSuccess={(name, comment) => {\r\n                                            if (nativeItem) {\r\n                                                setData([...data, {\r\n                                                    ...nativeItem,\r\n                                                    author: name,\r\n                                                    comment\r\n                                                } as Item])\r\n                                            }\r\n                                            setNativeItem(null)\r\n                                            setPage('WELCOME')\r\n                                        }}\r\n                                        onCancel={() => {\r\n                                            setNativeItem(null)\r\n                                            setPage('WELCOME')\r\n                                        }} />\r\n\r\n                                )\r\n                            case 'COMMENT':\r\n                                return (\r\n                                    <CommentPage item={data[currentItemIndex]}\r\n                                        onCancel={() => {\r\n                                            setNativeItem(null)\r\n                                            setPage('WELCOME')\r\n                                        }} />\r\n\r\n                                )\r\n                            default:\r\n                                return (\r\n                                    <WelcomePage data={data}\r\n                                        onAnswer={() => { setPage('ANSWER') }} />\r\n                                )\r\n                        }\r\n                    })()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","export default __webpack_public_path__ + \"static/media/little-tree.45d8a64c.svg\";","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}